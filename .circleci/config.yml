version: 2
jobs:
  build:

    working_directory: ~/circleci-demo-python-django
    docker:

      - image: circleci/python:3.6.8
        environment:
          PIPENV_VENV_IN_PROJECT: true
          DATABASE_URL: postgresql://root@localhost/circle_test?sslmode=disable
          ANSIBLE_HOST_KEY_CHECKING: no
      
      - image: circleci/postgres:9.6.2
        environment:
          POSTGRES_USER: pollsapp
          POSTGRES_DB: pollsapp_db

    branches:
      only:
        - master

    steps:
      - add_ssh_keys:
          fingerprints:
              - "2a:6f:9a:73:ac:82:ae:19:5a:2c:9e:0d:9b:70:32:c8"

      - checkout
      - run: sudo chown -R circleci:circleci /usr/local/bin
      - run: sudo chown -R circleci:circleci /usr/local/lib/python3.6/site-packages
      - restore_cache:
          key: deps9-{{ .Branch }}-{{ checksum "requirements.txt" }}

      - run:
          name: Installing Requirements
          command: |
            python3 -m venv venv
            . venv/bin/activate
            sudo pip3 install -r requirements.txt
      
      - save_cache:
          key: deps9-{{ .Branch }}-{{ checksum "requirements.txt" }}
          paths:
            - ".venv"
            - "/usr/local/bin"
            - "/usr/local/lib/python3.6/site-packages"

      - run:
          name: Coverage
          command: |
            coverage run manage.py test
            coverage report --fail-under=90
      
      - run:
          name: Run Playbook
          command: |
           cd ansible
           ansible-playbook continuous_dev.yml -i hosts

      - run:
          name: init .pypirc
          command: |
            echo -e "[pypi]" >> ~/.pypirc
            echo -e "username = deniskipkoech" >> ~/.pypirc
            echo -e "password = $PYPI_PASSWORD" >> ~/.pypirc
      
      - run:
          name: create packages
          command: |
            python3 setup.py sdist bdist_wheel

      - run:
          name: upload to pypi
          command: |
            twine upload dist/*       

      - store_test_results:
          path: test-results

      - store_artifacts:
          path: test-results
          destination: tr1

