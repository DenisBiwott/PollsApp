version: 2
jobs:

  start:
    working_directory: ~/circleci-demo-python-django
    docker:
      - image: circleci/python:3.6.8
        environment:
          PIPENV_VENV_IN_PROJECT: true
          DATABASE_URL: postgresql://root@localhost/circle_test?sslmode=disable
          ANSIBLE_HOST_KEY_CHECKING: no
      
      - image: circleci/postgres:9.6.2
        environment:
          POSTGRES_USER: pollsapp
          POSTGRES_DB: pollsapp_db

    steps:
      - checkout
      - run: sudo chown -R circleci:circleci /usr/local/bin
      - run: sudo chown -R circleci:circleci /usr/local/lib/python3.6/site-packages
      - restore_cache:
          key: deps9-{{ .Branch }}-{{ checksum "requirements.txt" }}

      - run:
          name: Installing Requirements
          command: |
            python3 -m venv venv
            . venv/bin/activate
            sudo pip3 install -r requirements.txt
      
      - save_cache:
          key: deps9-{{ .Branch }}-{{ checksum "requirements.txt" }}
          paths:
            - ".venv"
            - "/usr/local/bin"
            - "/usr/local/lib/python3.6/site-packages"

      - run:
          name: Coverage(Run tests)
          command: |
            coverage run manage.py test
            coverage report --fail-under=94
      

  publish:
    docker:
      - image: circleci/python:3.6.8
    steps:
      - checkout
      - run:
          name: init .pypirc
          command: |
            echo -e "[pypi]" >> ~/.pypirc
            echo -e "username = deniskipkoech" >> ~/.pypirc
            echo -e "password = $PYPI_PASSWORD" >> ~/.pypirc
      
      - run:
          name: create packages
          command: |
            python3 setup.py sdist bdist_wheel
      - run:
          name: upload to pypi
          command: "twine upload dist/*"

  deploy:
    docker:
      - image: circleci/python:3.6.8
    steps:
      - add_ssh_keys:
          fingerprints:
            - "da:25:63:85:c5:46:0e:79:46:15:b6:47:f7:0b:61:a4"

      - run:
          name: Run Playbook for continuous deployment
          command: |
           cd ansible
           ansible-playbook continuous_dev.yml -i hosts
workflows:
  version: 2
  build:
    jobs:
      - start
      - publish:
          requires:
            - start
          filters:
            branches:
              only: master
      - deploy:
          requires:
            - start
          filters:
            branches:
              only: master

